name: _deploy-aks-helm (template)
on:
  workflow_call:
    inputs:
      env_name:  { type: string, required: true }
      image_repo:{ type: string, required: true }
      image_tag: { type: string, required: true }
      chart_path:{ type: string, required: true }

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_name }}

    steps:
      - uses: actions/checkout@v4

      # === DEMO path: no Azure, lint & render chart ===
      - name: Helm lint (demo)
        if: ${{ vars.DEMO_MODE == 'true' }}
        run: |
          sudo snap install helm --classic >/dev/null 2>&1 || true
          helm lint "${{ inputs.chart_path }}" || true

      - name: Helm template (demo)
        if: ${{ vars.DEMO_MODE == 'true' }}
        run: |
          helm template demo "${{ inputs.chart_path }}" \
            --set image.repository=${{ inputs.image_repo }} \
            --set image.tag=${{ inputs.image_tag }} \
            | head -n 60

      # === REAL path: AKS login + Helm upgrade ===
      - name: Azure login (real)
        if: ${{ vars.DEMO_MODE != 'true' }}
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: AKS credentials (real)
        if: ${{ vars.DEMO_MODE != 'true' }}
        run: az aks get-credentials -g $AKS_RG -n $AKS_NAME --overwrite-existing

      - name: Setup Helm (real)
        if: ${{ vars.DEMO_MODE != 'true' }}
        uses: Azure/setup-helm@v4

      - name: Helm upgrade/install (real)
        if: ${{ vars.DEMO_MODE != 'true' }}
        run: |
          helm upgrade --install app ${{ inputs.chart_path }} \
            --set image.repository=${{ inputs.image_repo }} \
            --set image.tag=${{ inputs.image_tag }}